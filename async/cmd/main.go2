package main

import (
	"context"
	"errors"
	"fmt"
	"time"

	"github.com/pvillela/go-trygo2/async"
	"github.com/pvillela/go-trygo2/util"
)

func f1(_ context.Context) (int, error) {
	fmt.Println(">>> f1 starting")
	time.Sleep(100 * time.Millisecond)
	fmt.Println("<<< f1 finishing")
	return 1, nil
}

func f2(_ context.Context) (int, error) {
	fmt.Println(">>> f2 starting")
	time.Sleep(200 * time.Millisecond)
	fmt.Println("<<< f2 finishing")
	panic("f2 panicked")
}

func f3(_ context.Context) (int, error) {
	fmt.Println(">>> f3 starting")
	time.Sleep(300 * time.Millisecond)
	fmt.Println("<<< f3 finishing")
	return 0, errors.New("f3 errored-out")
}

func f4(ctx context.Context) (int, error) {
	fmt.Println(">>> f4 starting")
	time.Sleep(400 * time.Millisecond)
	fmt.Println("<<< f4 finishing")
	if ctx.Err() != nil {
		return 999, errors.New("aborted")
	}
	return 4, nil
}

func main() {
	func() {
		fmt.Println("*** f1")
		f := util.SafeFunc1E(f1)
		fmt.Println(f(context.Background()))
	}()

	func() {
		fmt.Println("*** f2")
		f := util.SafeFunc1E(f2)
		fmt.Println(f(context.Background()))
	}()

	func() {
		fmt.Println("*** Async 1")
		deferred := async.Async(context.Background(), f1)
		fmt.Println(deferred.Await())
	}()

	func() {
		fmt.Println("*** Async 2")
		deferred := async.Async(context.Background(), f2)
		fmt.Println(deferred.Await())
	}()

	func() {
		fmt.Println("*** Async 3")
		deferred := async.Async(context.Background(), f3)
		fmt.Println(deferred.Await())
	}()

	func() {
		fmt.Println("*** Async2Eg 12")
		deferreds := async.Async2Eg(context.Background(), f1, f2)
		fmt.Println(deferreds.X1.Await())
		fmt.Println(deferreds.X2.Await())
	}()

	func() {
		fmt.Println("*** Async2Eg 14")
		deferreds := async.Async2Eg(context.Background(), f1, f4)
		fmt.Println(deferreds.X1.Await())
		fmt.Println(deferreds.X2.Await())
	}()

	func() {
		fmt.Println("*** AsyncsEg 1234")
		deferreds := async.AsyncsEg(context.Background(), f1, f2, f3, f4)
		for _, deferred := range deferreds {
			fmt.Println(deferred.Await())
		}
	}()

	func() {
		fmt.Println("*** AsyncsEg 134")
		deferreds := async.AsyncsEg(context.Background(), f1, f3, f4)
		for _, deferred := range deferreds {
			fmt.Println(deferred.Await())
		}
	}()

	func() {
		fmt.Println("*** AsyncsEg 14")
		deferreds := async.AsyncsEg(context.Background(), f1, f4)
		for _, deferred := range deferreds {
			fmt.Println(deferred.Await())
		}
	}()

	func() {
		fmt.Println("*** Async2Wg 12")
		deferreds := async.Async2Wg(context.Background(), f1, f2)
		fmt.Println(deferreds.X1.Await())
		fmt.Println(deferreds.X2.Await())
	}()

	func() {
		fmt.Println("*** Async2Wg 14")
		deferreds := async.Async2Wg(context.Background(), f1, f4)
		fmt.Println(deferreds.X1.Await())
		fmt.Println(deferreds.X2.Await())
	}()

	func() {
		fmt.Println("*** AsyncsWg 1234")
		deferreds := async.AsyncsWg(context.Background(), f1, f2, f3, f4)
		for _, deferred := range deferreds {
			fmt.Println(deferred.Await())
		}
	}()

	func() {
		fmt.Println("*** AsyncsWg 134")
		deferreds := async.AsyncsWg(context.Background(), f1, f3, f4)
		for _, deferred := range deferreds {
			fmt.Println(deferred.Await())
		}
	}()

	func() {
		fmt.Println("*** AsyncsWg 14")
		deferreds := async.AsyncsWg(context.Background(), f1, f4)
		for _, deferred := range deferreds {
			fmt.Println(deferred.Await())
		}
	}()
}
