package util

import "fmt"

type ErrorOf struct {
	Value interface{}
}

func (err ErrorOf) Error() string {
	return fmt.Sprintf("%v", err.Value)
}

func ErrorOfIfNeeded(x interface{}) error {
	switch x.(type) {
	case error:
		return x.(error)
	default:
		return ErrorOf{x}
	}
}

type Tuple2[T1 any, T2 any] struct {
	X1 T1
	X2 T2
}

type Tuple3[T1 any, T2 any, T3 any] struct {
	X1 T1
	X2 T2
	X3 T3
}

type Tuple4[T1 any, T2 any, T3 any, T4 any] struct {
	X1 T1
	X2 T2
	X3 T3
	X4 T4
}
